policy_module(vector, 1.1)

########################################
#
# Declarations
#

# permissive vector_t;

## <desc>
## <p>
## Allow vector to read all system logs in /var/log 
## </p>
## </desc>
gen_tunable(vector_can_read_all_system_logs, false)

type vector_t;
type vector_exec_t;
init_daemon_domain(vector_t, vector_exec_t)
role system_r types vector_t;

type vector_config_t;
files_config_file(vector_config_t)

type vector_initrc_exec_t;
init_script_file(vector_initrc_exec_t)

type vector_log_t;
logging_log_file(vector_log_t)

type vector_unit_t;
systemd_unit_file(vector_unit_t)

type vector_var_lib_t;
files_type(vector_var_lib_t)

type vector_port_t;
corenet_port(vector_port_t)

type prometheusd_t;
#type tmpfs_t;
#type cgroup_t;
#type binfmt_misc_fs_t;
#type nfs_t;

########################################
#
# Common vector domain policy
#

allow vector_t self:capability2 block_suspend;
allow vector_t self:netlink_route_socket { bind create getattr nlmsg_read read write };
allow vector_t self:netlink_socket { bind create getattr read write };
allow vector_t self:tcp_socket { create_socket_perms listen accept };
allow vector_t self:udp_socket { create_socket_perms listen accept };

allow vector_t vector_config_t:dir list_dir_perms;
read_files_pattern(vector_t, vector_config_t, vector_config_t)

manage_files_pattern(vector_t, vector_log_t, vector_log_t)
manage_dirs_pattern(vector_t, vector_log_t, vector_log_t)
logging_log_filetrans(vector_t, vector_log_t, { dir file })

manage_files_pattern(vector_t, vector_var_lib_t, vector_var_lib_t)
manage_dirs_pattern(vector_t, vector_var_lib_t, vector_var_lib_t)
files_var_lib_filetrans(vector_t, vector_var_lib_t, { dir file })

kernel_read_net_sysctls(vector_t)

corenet_tcp_bind_generic_node(vector_t)
corenet_tcp_connect_unreserved_ports(vector_t)

sysnet_read_config(vector_t)

miscfiles_read_generic_certs(vector_t)

tunable_policy(`vector_can_read_all_system_logs',`
	logging_read_all_logs(vector_t)
')

########################################
#
# for node_exporter abilities on vector
#
kernel_read_all_sysctls(vector_t)
kernel_read_fs_sysctls(vector_t)
kernel_read_net_sysctls(vector_t)
kernel_read_network_state(vector_t)
kernel_read_software_raid_state(vector_t)
kernel_read_system_state(vector_t)

kernel_list_all_proc(vector_t)
kernel_list_proc(vector_t)
kernel_search_proc(vector_t)

corenet_tcp_bind_hplip_port(vector_t)
# Used for supervisor and gmond. Uncomment if you need to use them
#corenet_tcp_connect_tor_port(vector_t)		# 9001/tcp node_exporter --collector=supervisord
#corenet_tcp_connect_unreserved_ports(vector_t)	# 8649/tcp node_exporter --collector=gmond MARKED AS DEPRECATED !!

dbus_send_system_bus(vector_t)
dbus_system_bus_client(vector_t)

dev_read_sysfs(vector_t)

fs_getattr_rpc_pipefs(vector_t)
fs_getattr_tmpfs(vector_t)
fs_getattr_xattr_fs(vector_t)

init_dbus_chat(vector_t)
init_read_state(vector_t)
init_status(vector_t)

rpc_search_nfs_state_data(vector_t)

systemd_dbus_chat_logind(vector_t)

userdom_search_user_tmp_dirs(vector_t)

# port
allow vector_t vector_port_t:tcp_socket { name_bind name_connect };
allow prometheusd_t vector_port_t:tcp_socket name_connect;

# sys stats
#allow vector_t cgroup_t:dir { search getattr };
#allow vector_t cgroup_t:file { read open getattr };
#allow vector_t tmpfs_t:lnk_file { read getattr };
#allow vector_t sysfs_t:dir { search getattr };
#allow vector_t sysfs_t:file { read open getattr };
#allow vector_t binfmt_misc_fs_t:dir { search getattr };
#allow vector_t binfmt_misc_fs_t:file { read open getattr };
#allow vector_t nfs_t:dir { search getattr };
#allow vector_t nfs_t:file { read open getattr };
allow vector_t unreserved_port_t:tcp_socket name_bind;

